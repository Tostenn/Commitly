{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc4b Bienvenue sur Commitly","text":"<p>G\u00e9n\u00e9rateur de messages de commit intelligents et styl\u00e9s \u2728</p> <p>Commitly utilise l\u2019intelligence artificielle pour analyser votre code et g\u00e9n\u00e9rer des messages de commit coh\u00e9rents, clairs et contextualis\u00e9s.</p> <ul> <li>\u2705 Suivez vos conventions de commit</li> <li>\ud83c\udf0d Multi-langue (FR / EN)</li> <li>\u2699\ufe0f Int\u00e9gration Git facile</li> </ul>"},{"location":"api/","title":"\ud83d\udcd8 API de Commitly","text":""},{"location":"api/#commitly","title":"<code>Commitly(...)</code>","text":"<ul> <li><code>model</code>, <code>file_temp</code>, <code>lang</code></li> </ul>"},{"location":"api/#addfile","title":"<code>add(file)</code>","text":"<ul> <li>Ajoute un fichier au staging</li> </ul>"},{"location":"api/#generate_commit_message","title":"<code>generate_commit_message(...)</code>","text":"<ul> <li>G\u00e9n\u00e8re un message structur\u00e9 automatiquement</li> </ul>"},{"location":"api/#save_message_to_filemessage","title":"<code>save_message_to_file(message)</code>","text":"<ul> <li>Sauvegarde le message dans un fichier</li> </ul>"},{"location":"api/#commit","title":"<code>commit()</code>","text":"<ul> <li>Effectue le commit</li> </ul>"},{"location":"api/#push","title":"<code>push()</code>","text":"<ul> <li>Push vers le d\u00e9p\u00f4t distant</li> </ul>"},{"location":"api/#unstagefile","title":"<code>unstage(file)</code>","text":"<ul> <li>Retire du staging</li> </ul>"},{"location":"api/#file_stage","title":"<code>file_stage()</code>","text":"<ul> <li>Liste des fichiers staged</li> </ul>"},{"location":"contributeurs/","title":"\ud83d\udc65 Contribuer","text":"<p>Les contributions sont les bienvenues ! Pour contribuer :</p> <ol> <li>Forkez le projet</li> <li>Cr\u00e9ez une branche</li> <li>Ajoutez vos modifications</li> <li>Faites une PR</li> </ol> <p>Merci \u00e0 tous les contributeurs \ud83d\ude4c</p>"},{"location":"faq/","title":"\u2753 FAQ","text":"<p>Q : Commitly a-t-il besoin d\u2019une cl\u00e9 API ? Non. Il utilise <code>g4f</code> qui contourne l\u2019API officielle d\u2019OpenAI.</p> <p>Q : Est-ce que Commitly fonctionne en anglais ? Oui, il suffit d\u2019utiliser <code>lang=\"en\"</code> dans le constructeur.</p> <p>Q : Puis-je personnaliser le style des commits ? Oui ! Voir les options <code>style_commit</code>, <code>format_commit</code>, <code>recommandation_commit</code>.</p>"},{"location":"installation/","title":"\ud83e\uddf0 Installation","text":"<pre><code>pip install commitly\n</code></pre> <p>Assurez-vous d\u2019avoir <code>git</code> install\u00e9 et configur\u00e9.</p> <p>Commitly utilise par d\u00e9faut <code>gpt_4o_mini</code> via la librairie <code>g4f</code>. Aucun token requis.</p>"},{"location":"utilisation/","title":"\ud83d\ude80 Utilisation de base","text":"<pre><code>from commitly.commitly import Commitly\n\ncommitly = Commitly()\ncommitly.add(\"main.py\")\nmsg = commitly.generate_commit_message(ticket=\"#42\")\ncommitly.save_message_to_file(msg)\ncommitly.commit()\n</code></pre>"},{"location":"fran%C3%A7ais/readme/","title":"Readme","text":""},{"location":"fran%C3%A7ais/readme/#le-probleme-le-syndrome-du-commit-vide","title":"\ud83e\udde0 Le Probl\u00e8me : le syndrome du commit vide","text":"<p>Vous venez de finir une session intense de d\u00e9veloppement. Vous ex\u00e9cutez fi\u00e8rement :</p> <pre><code>git add .\ngit commit \"\"\n</code></pre> <p>Et l\u00e0\u2026 le vide.</p> <p>Votre curseur clignote, les guillemets sont vides, aucune id\u00e9e ne vient. Comment r\u00e9sumer proprement ce que vous venez de faire ? Comment respecter les conventions de commit ? Et ce ticket, faut-il le mentionner ? O\u00f9 ? Comment ?</p> <p>C\u2019est l\u00e0 que Commitly entre en jeu.</p>"},{"location":"fran%C3%A7ais/readme/#commitly-cest-quoi","title":"\ud83d\ude80 Commitly, c\u2019est quoi ?","text":"<p>Commitly est une biblioth\u00e8que Python qui utilise l\u2019intelligence artificielle pour g\u00e9n\u00e9rer automatiquement un message de commit clair et structur\u00e9 \u00e0 partir des changements que vous avez mis en cache (<code>git diff --cached</code>).</p> <p>Fini le syndrome du commit vide. Commitly vous propose un message ou plusieurs commits factoris\u00e9s, contextualis\u00e9s, multilingues, et conformes \u00e0 vos standards d\u2019\u00e9quipe.</p>"},{"location":"fran%C3%A7ais/readme/#installation","title":"\ud83d\udce6 Installation","text":"<p>Installez Commitly depuis PyPI :</p> <pre><code>pip install commitly\n</code></pre> <p>Assurez-vous d\u2019avoir Git install\u00e9 et correctement configur\u00e9.</p>"},{"location":"fran%C3%A7ais/readme/#fonctionnalites-principales","title":"\u2699\ufe0f Fonctionnalit\u00e9s principales","text":""},{"location":"fran%C3%A7ais/readme/#__init__modelgpt_4o_mini-file_tempcommittxt-langfr","title":"\ud83d\udd39 <code>__init__(model=gpt_4o_mini, file_temp=\"commit.txt\", lang=\"fr\")</code>","text":"<p>Cr\u00e9e une instance de Commitly avec :</p> <ul> <li><code>model</code> : mod\u00e8le IA utilis\u00e9 (par d\u00e9faut <code>gpt_4o_mini</code> via g4f).</li> <li><code>file_temp</code> : nom du fichier temporaire pour enregistrer le message.</li> <li><code>lang</code> : langue de g\u00e9n\u00e9ration (<code>fr</code> ou <code>en</code>).</li> </ul>"},{"location":"fran%C3%A7ais/readme/#addfile-str-bool","title":"\ud83d\udd39 <code>add(file: str) -&gt; bool</code>","text":"<p>Ajoute un fichier \u00e0 la zone de staging Git.</p> <pre><code>commitly.add(\"app/models/user.py\")\n</code></pre>"},{"location":"fran%C3%A7ais/readme/#generate_commit_message-dict-listdict","title":"\ud83d\udd39 <code>generate_commit_message(...) -&gt; dict | List[dict]</code>","text":"<p>G\u00e9n\u00e8re automatiquement un ou plusieurs messages de commit \u00e0 partir du <code>diff</code> en cache.</p> <p>Param\u00e8tres :</p> <ul> <li><code>style_commit</code>, <code>format_commit</code>, <code>recommandation_commit</code> : personnalisation du style et des consignes.</li> <li><code>ticket</code> : identifiant de ticket \u00e0 inclure dans le pied du message.</li> <li><code>fact</code> (bool\u00e9en) : active la factorisation intelligente du diff en plusieurs commits logiques.</li> </ul> <p>\u26a0\ufe0f L\u00e8ve une <code>DiffEmptyException</code> si aucun changement n\u2019est d\u00e9tect\u00e9 dans la zone de staging.</p>"},{"location":"fran%C3%A7ais/readme/#save_message_to_filemessage-str-bool","title":"\ud83d\udd39 <code>save_message_to_file(message: str) -&gt; bool</code>","text":"<p>Sauvegarde un message g\u00e9n\u00e9r\u00e9 dans le fichier temporaire.</p>"},{"location":"fran%C3%A7ais/readme/#commit-bool","title":"\ud83d\udd39 <code>commit() -&gt; bool</code>","text":"<p>Ex\u00e9cute un commit avec le message enregistr\u00e9 dans le fichier temporaire, puis le supprime.</p>"},{"location":"fran%C3%A7ais/readme/#push","title":"\ud83d\udd39 <code>push()</code>","text":"<p>Pousse les changements vers le d\u00e9p\u00f4t distant.</p>"},{"location":"fran%C3%A7ais/readme/#unstagefile-str","title":"\ud83d\udd39 <code>unstage(file: str)</code>","text":"<p>Retire un fichier de la zone de staging (<code>git reset &lt;file&gt;</code>).</p>"},{"location":"fran%C3%A7ais/readme/#file_stage-liststr","title":"\ud83d\udd39 <code>file_stage() -&gt; List[str]</code>","text":"<p>Retourne la liste des fichiers actuellement en staging (<code>git diff --cached --name-only</code>).</p>"},{"location":"fran%C3%A7ais/readme/#_run_cmdcmd-str-return_code-bool-false","title":"\ud83d\udd39 <code>_run_cmd(cmd: str, return_code: bool = False)</code>","text":"<p>M\u00e9thode interne pour ex\u00e9cuter des commandes shell.</p>"},{"location":"fran%C3%A7ais/readme/#exemple-complet","title":"\ud83e\uddea Exemple complet","text":"<pre><code>from commitly.commitly import Commitly\n\ncommitly = Commitly()\n\n# Mise en cache d\u2019un fichier\ncommitly.add(\"main.py\")\n\n# G\u00e9n\u00e9ration d\u2019un message unique avec ticket\nmessage = commitly.generate_commit_message(ticket=\"#42\")\n\n# Sauvegarde puis commit\ncommitly.save_message_to_file(message['commit'])\ncommitly.commit()\ncommitly.push()\n</code></pre>"},{"location":"fran%C3%A7ais/readme/#exemple-avec-factorisation-intelligente","title":"\ud83e\udde0 Exemple avec factorisation intelligente","text":"<pre><code>messages = commitly.generate_commit_message(ticket=\"#42\", fact=True)\nfor item in messages:\n    print(item[\"commit\"], \":\", item[\"files\"])\n</code></pre> <p>Exemple de sortie :</p> <pre><code>[\n    {\n        \"commit\": \"feat[core]: ajout de la gestion des r\u00f4les dans l\u2019authentification\",\n        \"files\": [\"auth/roles.py\", \"auth/utils.py\"]\n    },\n    {\n        \"commit\": \"docs: mise \u00e0 jour du guide d\u2019installation\",\n        \"files\": [\"docs/setup.md\"]\n    }\n]\n</code></pre>"},{"location":"fran%C3%A7ais/readme/#a-propos-du-format-de-commit","title":"\ud83e\udde9 \u00c0 propos du format de commit","text":"<p>Les messages g\u00e9n\u00e9r\u00e9s suivent cette structure standard :</p> <pre><code>&lt;type&gt;[\u00e9tendue optionnelle]: &lt;description&gt;\n\n[corps optionnel]\n\n[pied optionnel]  \u2190 ticket ici (#1234)\n</code></pre> <p>Types classiques :</p> <ul> <li><code>feat</code> : nouvelle fonctionnalit\u00e9</li> <li><code>fix</code> : correction de bug</li> <li><code>docs</code> : documentation</li> <li><code>refactor</code> : am\u00e9lioration sans changement de comportement</li> <li><code>chore</code> : t\u00e2ches techniques ou maintenance</li> </ul>"},{"location":"fran%C3%A7ais/readme/#pourquoi-utiliser-commitly","title":"\ud83d\udca1 Pourquoi utiliser Commitly ?","text":"<p>\u2705 \u00c9vite les commits g\u00e9n\u00e9riques type \u201cwip\u201d \u2705 Uniformise la convention de message au sein de l\u2019\u00e9quipe \u2705 G\u00e9n\u00e8re des commits factoris\u00e9s sans duplication de fichiers \u2705 Multilingue (fr/en) \u2705 Int\u00e9gration facile dans les workflows Git existants</p>"},{"location":"fran%C3%A7ais/readme/#licence","title":"\ud83d\udccb Licence","text":"<p>MIT \u00a9 2025 Kouya Chance Boman Tosten</p> <p>Fini le syndrome du commit vide. Laissez Commitly \u00e9crire l\u2019histoire de votre code, commit apr\u00e8s commit.</p>"}]}